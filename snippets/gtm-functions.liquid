<script>
  // (function() {
  //     var scrollDepthTriggered = {};

  //     function trackScrollDepth() {
  //         var scrollDepths = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]; // Scroll thresholds in percentage
  //         var scrollPosition = Math.floor((window.scrollY + window.innerHeight) / document.body.scrollHeight * 100);

  //         scrollDepths.forEach(function(depth) {
  //             if (scrollPosition >= depth && !scrollDepthTriggered[depth]) {
  //                 scrollDepthTriggered[depth] = true; // Mark this depth as triggered

  //                 // Push event to GTM
  //                 window.dataLayer = window.dataLayer || [];
  //                 window.dataLayer.push({
  //                     'event': 'scroll_depth',
  //                     'scroll_percentage': depth,
  //                     'scroll_direction': 'vertical',
  //                     'page_url': window.location.href
  //                 });

  //             }
  //         });
  //     }

  //     // Add event listener to track scroll
  //     window.addEventListener('scroll', function() {
  //         requestAnimationFrame(trackScrollDepth);
  //     });
  // })();


     function getTimestamp() {
       var timestamp_t = new Date().toLocaleString();
        return timestamp_t;
      }
      // velocity 11-07-2024: Function to get the
      function getDeviveType(){
          var width = window.innerWidth;
          if (width >= 1024) {
              return 'desktop';
          } else if (width >= 768) {
              return 'tablet';
          } else {
              return 'mobile';
          }
      }

      // velocity 11-07-2024: Function to get the customer ID of the logged in customer. If no customer is logged in we will get it as blank
      function getCustomerId() {
        {% if customer %}
          return '{{ customer.id }}';
        {% endif %}
         return '';
      }
      // velocity 11-07-2024: Function to get the Previous page URL
      function getPreviousPageUrl() {
        return document.referrer;
      }
      // velocity 11-07-2024: Function to push the Product detail event to the  GTM
     function pushProductDetailEvent() {
          window.dataLayer.push({
            event: "productDetail",
            productId: v_productId,
            productName: v_productName,
            productPrice: v_productPrice,
            discounts: v_productDiscount,
            offer_price: v_productOfferPrice,
            productBrand: v_productBrand,
            productCategory: v_productCollection,
            productType: v_productType,
            productSku: v_productSku,
            productVariantId: v_productVariantId,
            productVariantTitle: v_productVariantTitle,
            currency: v_shopCurrency,
            timestamp: getTimestamp(),
            device_type: getDeviveType(),
            user_id: getCustomerId(),
            registered_mobile_number: '',
            category_id: v_productCollectionId,
            variant_name: v_productVariantTitle,
            category_name: v_productCollection,
            number_of_images: v_imageCount,
            product_info: v_productInfo,
            product_description: v_productDescription,
            previous_screen: getPreviousPageUrl(),
            ecommerce: {
              items: [
                  {
                    productId: v_productId,
                    productName: v_productName,
                    productPrice: v_productPrice,
                    discounts: v_productDiscount,
                    offer_price: v_productOfferPrice,
                    productBrand: v_productBrand,
                    productCategory: v_productCollection,
                    productType: v_productType,
                    productSku: v_productSku,
                    productVariantId: v_productVariantId,
                    productVariantTitle: v_productVariantTitle,
                    category_id: v_productCollectionId,
                    variant_name: v_productVariantTitle,
                    category_name: v_productCollection,
                    number_of_images: v_imageCount,
                    product_info: v_productInfo,
                    product_description: v_productDescription
                  }
                ]
            }
        });
      }

     function handleViewCartClick(event) {
      // Prevent the default action if it's a link/button
      event.preventDefault();

      // Fetch cart details using Shopify AJAX API
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          const cartItemsCount = cart.items.length; // Number of distinct items in the cart
          const cartItemsQuantity = cart.items.reduce((total, item) => total + item.quantity, 0); // Total quantity of all items
          const cartValue = cart.total_price / 100; // Shopify returns price in cents

          // Perform your custom action here

          // For example, pushing an event to the data layer
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: 'view_cart',
            ecommerce: {
            device_type: getDeviveType(),
            user_id: getCustomerId(),
            registered_mobile_number: '',
            cart_items_count: cartItemsCount,
            cart_items_quantity: cartItemsQuantity,
            cart_value: cartValue
            }
          });

          // Redirect to the cart page
          window.location.href = '/cart';
        })
        .catch(error => {
          console.error('Error fetching cart details:', error);
        });
    }

    function handleBeginCheckout(data = '') {
      // Fetch cart details using Shopify AJAX API
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          const cartItemsCount = cart.items.length; // Number of distinct items in the cart
          const cartItemsQuantity = cart.items.reduce((total, item) => total + item.quantity, 0); // Total quantity of all items
          const cartValue = cart.total_price / 100; // Shopify returns price in cents

          // For example, pushing an event to the data layer
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: 'begin_checkout',
            ecommerce: {
            device_type: getDeviveType(),
            user_id: getCustomerId(),
            senders_phone_number: document.getElementById('your-number').value,
            cart_items_count: cartItemsCount,
            cart_items_quantity: cartItemsQuantity,
            cart_value: cartValue,
            delivery_date: $('#delivery_date1').val(),
            delivery_slot: $('#time-slot option[value]:selected').text()
            }
          });

        })
        .catch(error => {
          console.error('Error fetching checkout details:', error);
        });

      if(data == '') {
         $("#BYOHCheckout").click();
      } else {
         window.location.href = data;
      }
    }

     function pushPLPEvent() {
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "plpView",
            ecommerce: {
                    user_id: getCustomerId(),
                    registered_mobile_number: '',
                    category_id: collection_id,
                    category_name: collection_title,
                    number_of_products: collection_product_count
            }
        });
      }

    function pushLocationFilterClick() {
       window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "locationFilter",
            ecommerce: {
                    user_id: getCustomerId(),
                    registered_mobile_number: '',
                    previous_city: localStorage.getItem("location-city")
            }
        });
    }

     function pushSelectLocationFromDropdown(new_city ='', new_pincode ='', pop_up_open_type) {
       window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "selectCityFromDropdown",
            ecommerce: {
                    user_id: getCustomerId(),
                    registered_mobile_number: '',
                    previous_city: localStorage.getItem("location-city"),
                    previous_pincode: localStorage.getItem("userPincode"),
                    new_city: new_city,
                    new_pincode: new_pincode,
                    pop_up_opened: pop_up_open_type
            }
        });
    }


    // velocity 11-07-2024: Function to push the Product detail event to the  GTM
      function pushPincodeEnteredEvent(is_product_available=1,message="") {
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "PincodeEntered",
            ecommerce: {
                user_id: getCustomerId(),
                productId: v_productId,
                productVariantId: v_productVariantId,
                category_id: v_productCollectionId,
                productName: v_productName,
                productVariantTitle: v_productVariantTitle,
                category_name: v_productCollection,
                pincode: $('#pincode_input').val(),
                is_product_available: is_product_available,
                message: message
            }
        });
      }

  $(document).ready(function() {
      // Trigger event when the input field is clicked
      $('.search__input').on('click', function() {
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
             event: "searchBoxClicked",
             ecommerce: {
                user_id: getCustomerId()
             }
          });
      });

      // Trigger event when the value of the input field changes
      $('.search__input').on('change', function() {
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "searchStringPut",
            ecommerce: {
               user_id: getCustomerId(),
              search_keyword: $(this).val(), // Capture the new value of the input
              count_of_results_shown: '', // Populate this with the appropriate value
              results_shown: '' // Populate this with the appropriate value
            }
          });
      });

      // Trigger event when the value of the input field changes
      $('#delivery_date1').on('change', function() {
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "deliveryDateEntered",
            ecommerce: {
              user_id: getCustomerId(),
              delivery_date: $(this).val(), // Capture the new value of the input
            }
          });
      });

      // Trigger event when the value of the input field changes
      $('#time-slot').on('change', function() {
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "deliverySlotSelected",
            ecommerce: {
              user_id: getCustomerId(),
              delivery_slot: $(this).val(), // Capture the new value of the input
            }
          });
      });

      // Trigger event when the value of the input field changes
      $('#your-number').on('change', function() {
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "sendersPhoneNumber",
            ecommerce: {
               user_id: getCustomerId(),
              senders_mobile_number: $(this).val(), // Capture the new value of the input
            }
          });
      });
    // Trigger event when click on whatsapp enquiry for international products on PDP . Added by Velocity 16-07-2025
      $('.enquire-now-btn').on('click', function() {
          pushEnquiryOnWhatsAppEvent();
      });
  });

    function handleCartDrawer() {
      // Fetch cart details using Shopify AJAX API
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          const cartItemsCount = cart.items.length; // Number of distinct items in the cart
          const cartItemsQuantity = cart.items.reduce((total, item) => total + item.quantity, 0); // Total quantity of all items
          const cartValue = cart.total_price / 100; // Shopify returns price in cents

          // Perform your custom action here


          // For example, pushing an event to the data layer
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: 'cartDrawerOpen',
            ecommerce: {
            user_id: getCustomerId(),
            cart_items_count: cartItemsCount,
            cart_items_quantity: cartItemsQuantity,
            cart_value: cartValue
            }
          });
        })
        .catch(error => {
          console.error('Error fetching cart details:', error);
        });
    }

   function addToCartEvent(line) {
        var currentUrl = window.location.href;
         var source = '';
         if (currentUrl.includes('/products/')) {
              source = 'cart_drawer';
          } else if (currentUrl.includes('/cart/')) {
              source = 'cart_page';
          }
          //Velocity 05-07-2024 fetching the values from the hidden input fields defined on the cart page.
          var cart_productId = document.getElementById('line_product_id_' + line).value;
          var cart_productName = document.getElementById('line_product_name_' + line).value;
          var cart_productBrand = document.getElementById('line_product_brand_' + line).value;
          var cart_productQuantity = document.getElementById('line_product_quantity_' + line).value;
          var cart_productPrice = document.getElementById('line_product_price_' + line).value;
          var cart_productType = document.getElementById('line_product_type_' + line).value;
          var cart_productSku = document.getElementById('line_product_sku_' + line).value;
          var cart_productVariantId = document.getElementById('line_product_variant_id_' + line).value;
          var cart_productVariantTitle = document.getElementById('line_product_variant_title_' + line).value;
          var cart_pincode = document.getElementById('line_product_pincode_' + line).value;
         var cart_value_final = document.getElementById('cart_value_final').value;
          // Clear dataLayer
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.length = 0; // Clear the existing dataLayer array

          // Push addToCart event
          window.dataLayer.push({
              'event': 'addToCart',
             'user_id': getCustomerId(),
              'ecommerce': {
                  'currencyCode': shop_currency_code, // Assuming v_shopCurrency is defined globally
                   'source': source,
                      'products': [{
                           'product_id': cart_productId,
                          'product_name': cart_productName,
                          'category': '', // Replace with v_productCollection if available
                          'brand': cart_productBrand,
                          'variant_name': cart_productVariantTitle,
                          'price': cart_productPrice,
                          'offer_price': 0, // Replace with v_productOfferPrice if available
                          'discount': 0, // Replace with v_productDiscount if available
                          'quantity': cart_productQuantity,
                          'cart_value': cart_value_final
                      }]
              }
          });
     }

     function removeItemFromCartEvent(line) {
         var currentUrl = window.location.href;
         var source = '';
         if (currentUrl.includes('/products/')) {
              source = 'cart_drawer';
          } else if (currentUrl.includes('/cart/')) {
              source = 'cart_page';
          }
          //Velocity 05-07-2024 fetching the values from the hidden input fields defined on the cart page.
          var cart_productId = document.getElementById('line_product_id_' + line).value;
          var cart_productName = document.getElementById('line_product_name_' + line).value;
          var cart_productBrand = document.getElementById('line_product_brand_' + line).value;
          var cart_productQuantity = document.getElementById('line_product_quantity_' + line).value;
          var cart_productPrice = document.getElementById('line_product_price_' + line).value;
          var cart_productType = document.getElementById('line_product_type_' + line).value;
          var cart_productSku = document.getElementById('line_product_sku_' + line).value;
          var cart_productVariantId = document.getElementById('line_product_variant_id_' + line).value;
          var cart_productVariantTitle = document.getElementById('line_product_variant_title_' + line).value;
          var cart_pincode = document.getElementById('line_product_pincode_' + line).value;
          var cart_value_final = document.getElementById('cart_value_final').value;
          // Clear dataLayer
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.length = 0; // Clear the existing dataLayer array

           // Push removeFromCart event
            window.dataLayer.push({
                'event': 'removeFromCart',
                'user_id': getCustomerId(),
                'ecommerce': {
                     'source': source,
                      'currencyCode': shop_currency_code, // Assuming v_shopCurrency is defined globally
                      'products': [{
                          'product_id': cart_productId,
                          'product_name': cart_productName,
                          'category': '', // Replace with v_productCollection if available
                          'brand': cart_productBrand,
                          'variant_name': cart_productVariantTitle,
                          'price': cart_productPrice,
                          'offer_price': 0, // Replace with v_productOfferPrice if available
                          'discount': 0, // Replace with v_productDiscount if available
                          'remaining_quantity': cart_productQuantity,
                          'cart_value': cart_value_final
                      }]
                }
            });
     }

    function removeCompleteItemFromCartEvent(line) {
         var currentUrl = window.location.href;
         var source = '';
         if (currentUrl.includes('/products/')) {
              source = 'cart_drawer';
          } else if (currentUrl.includes('/cart/')) {
              source = 'cart_page';
          }

          //Velocity 05-07-2024 fetching the values from the hidden input fields defined on the cart page.
          var cart_productId = document.getElementById('line_product_id_' + line).value;
          var cart_productName = document.getElementById('line_product_name_' + line).value;
          var cart_productBrand = document.getElementById('line_product_brand_' + line).value;
          var cart_productQuantity = document.getElementById('line_product_quantity_' + line).value;
          var cart_productPrice = document.getElementById('line_product_price_' + line).value;
          var cart_productType = document.getElementById('line_product_type_' + line).value;
          var cart_productSku = document.getElementById('line_product_sku_' + line).value;
          var cart_productVariantId = document.getElementById('line_product_variant_id_' + line).value;
          var cart_productVariantTitle = document.getElementById('line_product_variant_title_' + line).value;
          var cart_pincode = document.getElementById('line_product_pincode_' + line).value;
          var cart_value_final = document.getElementById('cart_value_final').value;
          var line_total = (parseFloat(document.getElementById('line_product_price_' + line).value)) * cart_productQuantity ;

          // Clear dataLayer
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.length = 0; // Clear the existing dataLayer array

           // Push removeFromCart event
            window.dataLayer.push({
                'event': 'removeCompleteItemFromCart',
                'user_id': getCustomerId(),
                'ecommerce': {
                     'source': source,
                      'currencyCode': shop_currency_code, // Assuming v_shopCurrency is defined globally
                      'products': [{
                          'product_id': cart_productId,
                          'product_name': cart_productName,
                          'category': '', // Replace with v_productCollection if available
                          'brand': cart_productBrand,
                          'variant_name': cart_productVariantTitle,
                          'price': cart_productPrice,
                          'offer_price': 0, // Replace with v_productOfferPrice if available
                          'discount': 0, // Replace with v_productDiscount if available
                          'removed_quantity': cart_productQuantity,
                          'cart_value': cart_value_final,
                          'amount' : line_total
                      }]
                }
            });
     }

     function searchInputEnter() {
         // Clear dataLayer
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.length = 0; // Clear the existing dataLayer array

           // Push removeFromCart event
            window.dataLayer.push({
                'event': 'searchInputEnter',
                'ecommerce': {
                  'user_id': getCustomerId(),
                   'search_keyword': searchKeyword,
                    'location': Location,
                    'countOfResultsShown': productsArray.length,
                    'items':productsArray
                }
            });
      }

    function handleImageClick(image_src, target_link) {
         // Clear dataLayer
        window.dataLayer = window.dataLayer || [];
        window.dataLayer.length = 0; // Clear the existing dataLayer array
               // Push removeFromCart event
                window.dataLayer.push({
                    'event': 'banner_click',
                    'ecommerce': {
                        'user_id': getCustomerId(),
                       'image_src': (image_src),
                        'target_url': target_link
                    }
                });
      window.location.href = target_link;
      }

    window.addEventListener('load', function() {

          function getPageLoadTime() {
              var timing = window.performance.timing;
              var pageLoadTimeMs = timing.loadEventEnd - timing.navigationStart;

              if (pageLoadTimeMs < 0) {
                  // If pageLoadTime is negative, try again after a short delay
                  setTimeout(getPageLoadTime, 100);
                  return;
              }

              var pageLoadTimeSec = (pageLoadTimeMs / 1000).toFixed(2); // Convert to seconds and round to 2 decimal places
              var currentUrl = window.location.href;



              window.dataLayer = window.dataLayer || [];
              // Push the page load time in ms, seconds, and the current URL to the dataLayer
              window.dataLayer.push({
                  'event': 'pageLoadTime',
                   'ecommerce': {
                     'user_id': getCustomerId(),
                    'pageLoadTimeMs': pageLoadTimeMs,
                    'pageLoadTimeSec': pageLoadTimeSec,
                    'currentUrl': currentUrl
                   }
              });
          }

          getPageLoadTime();
      });


       function userStartedPincodeEnter(initial_pincode ='') {
       window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "initial_pincode_enter",
            ecommerce: {
                    user_id: getCustomerId(),
                    registered_mobile_number: '',
                    initial_pincode: initial_pincode
            }
        });
    }
       function push_pincode_error(entered_text ='', error_message='') {
       window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "pincode_error",
            ecommerce: {
                    user_id: getCustomerId(),
                    registered_mobile_number: '',
                    entered_text: entered_text,
                    error_message: error_message
            }
        });
    }
         function push_international_form_query(response) {
        // Push normalized data to GTM
        window.dataLayer = window.dataLayer || [];
        window.dataLayer.push({
          event: 'international_form_filled',
          ecommerce: response
        });

      }
      {% comment %} Added by Velocity on 11-09-2025 to push the events data for concierge form submissions {% endcomment %}
         function push_concierge_form_query(response) {
        // Push normalized data to GTM
        window.dataLayer = window.dataLayer || [];
        window.dataLayer.push({
          event: 'concierge_form_filled',
          concierge_form_data: response
        });

      }
  // Added by Velocity 16-07-2025: Function to push the WhatsApp Enquiry For International Products event to the  GTM and Meta
   function pushEnquiryOnWhatsAppEvent() {
    window.dataLayer = window.dataLayer || [];
    const eventData = {
        event: "enquiry_for_international_products_on_pdp",
        ecommerce: {
            user_id: getCustomerId(),
            productId: v_productId,
            productVariantId: v_productVariantId,
            category_id: v_productCollectionId,
            productName: v_productName,
            productVariantTitle: v_productVariantTitle,
            category_name: v_productCollection,
            productPrice: v_productPrice
        }
    };
    window.dataLayer.push(eventData);
    }
</script>
